% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataManagement.R
\name{xRemoveFromProject}
\alias{xRemoveFromProject}
\title{Deletes a network from an existing "dataproject" object}
\usage{
xRemoveFromProject(NET1)
}
\arguments{
\item{NET1}{A network which is part of a "dataproject" (which needs to be of type "PROJECT"$"NETWORK").}
}
\value{
A "dataproject" without the specific network.
}
\description{
Takes a network (specified as "PROJECT"$"NETWORK") as input and deletes it from the overall "dataproject" ("PROJECT") it is part of.
This means that the input "NET1" needs to have the form "PROJECT"$"NETWORK" so that the specified network ("NETWORK") can be deleted from the "dataproject" ("PROJECT").
\itemize{
\item Last updated: 1 May 2022.
}
}
\examples{
## We can consider an existing network and add the transposed
## Create a network with ordinal categories (0='no relation', 1='acquaintance', 2='friend',
##    3='good friend') as an (adjacency) matrix:
Friendship3<-matrix(c(0,1,1, 2,0,3, 0,2,0),3,3, byrow=TRUE)
## Add node names to the matrix:
rownames(Friendship3)<-c("a","b","c")
colnames(Friendship3)<-rownames(Friendship3)

## Now create the "dataproject", which we call "SchoolClass_Project1"
SchoolClass_Project1<-xCreateProject(GeneralDescription="Dataset among 3 students",
     NetworkName="Friendship",
     NETFILE1=Friendship3,
     FileType="Robject",
     InFormatType="AdjMat",
     NetworkDescription="Strength (0=no relation, 1=acquaintance, 2=friend, 3=good friend)",
     Mode=c("Students"),
     Directed=TRUE,
     Loops=FALSE,
     Values="Ordinal",
     Class="matrix",
     References="No references")
## Check the newly created "dataproject" object
SchoolClass_Project1

## Now create the transposed and add:
SchoolClass_Project1<-xAddToProject(ProjectName=SchoolClass_Project1,
        NetworkName="Friendship_Tr",
        NETFILE1=t(SchoolClass_Project1$Friendship),
        FileType="Robject",
        InFormatType="AdjMat",
        NetworkDescription="Transposed of the friendship network",
        Mode=c("Students"),
        Directed=TRUE,
        Loops=FALSE,
        Values="Ordinal",
        Class="matrix")
## Check the new result:
SchoolClass_Project1

## Remove the original friendship network:
SchoolClass_Project1<-xRemoveFromProject(SchoolClass_Project1$Friendship)
## Check that network has been removed:
SchoolClass_Project1
}
\author{
Filip Agneessens, \email{filipagneessens2@gmail.com}
}
